services:
  nginx:
    image: nginx:latest
    container_name: telegram_app_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.test.conf:/etc/nginx/nginx.conf:ro
      - .:/data
      - php_socket:/var/run/php
      - ./data/certbot/conf:/etc/letsencrypt:ro
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - app_network

  app:
    build:
      context: docker/fpm
    container_name: telegram_app
    restart: always
    volumes:
      - .:/data
      - php_socket:/var/run/php
    depends_on:
      - db
      - redis
    networks:
      - app_network
    command: >
      sh -c "
        php artisan migrate --force &&
        php artisan config:cache &&
        php artisan route:cache &&
        php artisan view:cache &&
        php artisan telegram:setWebhook &&
        php artisan schedule:work
      "

  db:
    image: postgres:16
    container_name: telegram_db
    restart: always
    environment:
      POSTGRES_DB: telegram
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:latest
    restart: always
    networks:
      - app_network

  certbot:
    image: certbot/certbot
    container_name: telegram_certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c "sleep 5 && certbot certonly --webroot -w /var/www/certbot -d remyzonk.ru --email merty.fake@gmail.com --agree-tos --no-eff-email"

volumes:
  php_socket:
  pgdata:

networks:
  app_network:
    driver: bridge
